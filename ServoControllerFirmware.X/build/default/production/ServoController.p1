Version 3.2 HI-TECH Software Intermediate Code
"1135 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f628a.h
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"530
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"1503
[v _TMR2IF `Vb ~T0 @X0 0 e@97 ]
"1501
[v _TMR2IE `Vb ~T0 @X0 0 e@1121 ]
"1505
[v _TMR2ON `Vb ~T0 @X0 0 e@146 ]
"1533
[v _TRISB1 `Vb ~T0 @X0 0 e@1073 ]
"1199
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"1339
[v _BRGH `Vb ~T0 @X0 0 e@1218 ]
"1379
[v _CREN `Vb ~T0 @X0 0 e@196 ]
"1465
[v _SPEN `Vb ~T0 @X0 0 e@199 ]
"758
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"1401
[v _OERR `Vb ~T0 @X0 0 e@193 ]
"1389
[v _FERR `Vb ~T0 @X0 0 e@194 ]
"1515
[v _TRISA0 `Vb ~T0 @X0 0 e@1064 ]
"1517
[v _TRISA1 `Vb ~T0 @X0 0 e@1065 ]
"1519
[v _TRISA2 `Vb ~T0 @X0 0 e@1066 ]
"1521
[v _TRISA3 `Vb ~T0 @X0 0 e@1067 ]
"1531
[v _TRISB0 `Vb ~T0 @X0 0 e@1072 ]
"1537
[v _TRISB3 `Vb ~T0 @X0 0 e@1075 ]
"1415
[v _RA0 `Vb ~T0 @X0 0 e@40 ]
"1417
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"1419
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
"1421
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
"1423
[v _RA4 `Vb ~T0 @X0 0 e@44 ]
"1453
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"1441
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
[p mainexit ]
"1405
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"1391
[v _GIE `Vb ~T0 @X0 0 e@95 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f628a.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f628a.h
[; ;pic16f628a.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f628a.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f628a.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f628a.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f628a.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f628a.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f628a.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f628a.h: 76: typedef union {
[; ;pic16f628a.h: 77: struct {
[; ;pic16f628a.h: 78: unsigned C :1;
[; ;pic16f628a.h: 79: unsigned DC :1;
[; ;pic16f628a.h: 80: unsigned Z :1;
[; ;pic16f628a.h: 81: unsigned nPD :1;
[; ;pic16f628a.h: 82: unsigned nTO :1;
[; ;pic16f628a.h: 83: unsigned RP :2;
[; ;pic16f628a.h: 84: unsigned IRP :1;
[; ;pic16f628a.h: 85: };
[; ;pic16f628a.h: 86: struct {
[; ;pic16f628a.h: 87: unsigned :5;
[; ;pic16f628a.h: 88: unsigned RP0 :1;
[; ;pic16f628a.h: 89: unsigned RP1 :1;
[; ;pic16f628a.h: 90: };
[; ;pic16f628a.h: 91: struct {
[; ;pic16f628a.h: 92: unsigned CARRY :1;
[; ;pic16f628a.h: 93: unsigned :1;
[; ;pic16f628a.h: 94: unsigned ZERO :1;
[; ;pic16f628a.h: 95: };
[; ;pic16f628a.h: 96: } STATUSbits_t;
[; ;pic16f628a.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f628a.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f628a.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f628a.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f628a.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f628a.h: 169: typedef union {
[; ;pic16f628a.h: 170: struct {
[; ;pic16f628a.h: 171: unsigned RA0 :1;
[; ;pic16f628a.h: 172: unsigned RA1 :1;
[; ;pic16f628a.h: 173: unsigned RA2 :1;
[; ;pic16f628a.h: 174: unsigned RA3 :1;
[; ;pic16f628a.h: 175: unsigned RA4 :1;
[; ;pic16f628a.h: 176: unsigned RA5 :1;
[; ;pic16f628a.h: 177: unsigned RA6 :1;
[; ;pic16f628a.h: 178: unsigned RA7 :1;
[; ;pic16f628a.h: 179: };
[; ;pic16f628a.h: 180: } PORTAbits_t;
[; ;pic16f628a.h: 181: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f628a.h: 226: extern volatile unsigned char PORTB @ 0x006;
"228
[; ;pic16f628a.h: 228: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f628a.h: 231: typedef union {
[; ;pic16f628a.h: 232: struct {
[; ;pic16f628a.h: 233: unsigned RB0 :1;
[; ;pic16f628a.h: 234: unsigned RB1 :1;
[; ;pic16f628a.h: 235: unsigned RB2 :1;
[; ;pic16f628a.h: 236: unsigned RB3 :1;
[; ;pic16f628a.h: 237: unsigned RB4 :1;
[; ;pic16f628a.h: 238: unsigned RB5 :1;
[; ;pic16f628a.h: 239: unsigned RB6 :1;
[; ;pic16f628a.h: 240: unsigned RB7 :1;
[; ;pic16f628a.h: 241: };
[; ;pic16f628a.h: 242: } PORTBbits_t;
[; ;pic16f628a.h: 243: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f628a.h: 288: extern volatile unsigned char PCLATH @ 0x00A;
"290
[; ;pic16f628a.h: 290: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f628a.h: 293: typedef union {
[; ;pic16f628a.h: 294: struct {
[; ;pic16f628a.h: 295: unsigned PCLATH :5;
[; ;pic16f628a.h: 296: };
[; ;pic16f628a.h: 297: } PCLATHbits_t;
[; ;pic16f628a.h: 298: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f628a.h: 308: extern volatile unsigned char INTCON @ 0x00B;
"310
[; ;pic16f628a.h: 310: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f628a.h: 313: typedef union {
[; ;pic16f628a.h: 314: struct {
[; ;pic16f628a.h: 315: unsigned RBIF :1;
[; ;pic16f628a.h: 316: unsigned INTF :1;
[; ;pic16f628a.h: 317: unsigned T0IF :1;
[; ;pic16f628a.h: 318: unsigned RBIE :1;
[; ;pic16f628a.h: 319: unsigned INTE :1;
[; ;pic16f628a.h: 320: unsigned T0IE :1;
[; ;pic16f628a.h: 321: unsigned PEIE :1;
[; ;pic16f628a.h: 322: unsigned GIE :1;
[; ;pic16f628a.h: 323: };
[; ;pic16f628a.h: 324: struct {
[; ;pic16f628a.h: 325: unsigned :2;
[; ;pic16f628a.h: 326: unsigned TMR0IF :1;
[; ;pic16f628a.h: 327: unsigned :2;
[; ;pic16f628a.h: 328: unsigned TMR0IE :1;
[; ;pic16f628a.h: 329: };
[; ;pic16f628a.h: 330: } INTCONbits_t;
[; ;pic16f628a.h: 331: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f628a.h: 386: extern volatile unsigned char PIR1 @ 0x00C;
"388
[; ;pic16f628a.h: 388: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f628a.h: 391: typedef union {
[; ;pic16f628a.h: 392: struct {
[; ;pic16f628a.h: 393: unsigned TMR1IF :1;
[; ;pic16f628a.h: 394: unsigned TMR2IF :1;
[; ;pic16f628a.h: 395: unsigned CCP1IF :1;
[; ;pic16f628a.h: 396: unsigned :1;
[; ;pic16f628a.h: 397: unsigned TXIF :1;
[; ;pic16f628a.h: 398: unsigned RCIF :1;
[; ;pic16f628a.h: 399: unsigned CMIF :1;
[; ;pic16f628a.h: 400: unsigned EEIF :1;
[; ;pic16f628a.h: 401: };
[; ;pic16f628a.h: 402: } PIR1bits_t;
[; ;pic16f628a.h: 403: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f628a.h: 443: extern volatile unsigned short TMR1 @ 0x00E;
"445
[; ;pic16f628a.h: 445: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f628a.h: 450: extern volatile unsigned char TMR1L @ 0x00E;
"452
[; ;pic16f628a.h: 452: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f628a.h: 457: extern volatile unsigned char TMR1H @ 0x00F;
"459
[; ;pic16f628a.h: 459: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f628a.h: 464: extern volatile unsigned char T1CON @ 0x010;
"466
[; ;pic16f628a.h: 466: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f628a.h: 469: typedef union {
[; ;pic16f628a.h: 470: struct {
[; ;pic16f628a.h: 471: unsigned TMR1ON :1;
[; ;pic16f628a.h: 472: unsigned TMR1CS :1;
[; ;pic16f628a.h: 473: unsigned nT1SYNC :1;
[; ;pic16f628a.h: 474: unsigned T1OSCEN :1;
[; ;pic16f628a.h: 475: unsigned T1CKPS :2;
[; ;pic16f628a.h: 476: };
[; ;pic16f628a.h: 477: struct {
[; ;pic16f628a.h: 478: unsigned :4;
[; ;pic16f628a.h: 479: unsigned T1CKPS0 :1;
[; ;pic16f628a.h: 480: unsigned T1CKPS1 :1;
[; ;pic16f628a.h: 481: };
[; ;pic16f628a.h: 482: } T1CONbits_t;
[; ;pic16f628a.h: 483: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f628a.h: 523: extern volatile unsigned char TMR2 @ 0x011;
"525
[; ;pic16f628a.h: 525: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f628a.h: 530: extern volatile unsigned char T2CON @ 0x012;
"532
[; ;pic16f628a.h: 532: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f628a.h: 535: typedef union {
[; ;pic16f628a.h: 536: struct {
[; ;pic16f628a.h: 537: unsigned T2CKPS :2;
[; ;pic16f628a.h: 538: unsigned TMR2ON :1;
[; ;pic16f628a.h: 539: unsigned TOUTPS :4;
[; ;pic16f628a.h: 540: };
[; ;pic16f628a.h: 541: struct {
[; ;pic16f628a.h: 542: unsigned T2CKPS0 :1;
[; ;pic16f628a.h: 543: unsigned T2CKPS1 :1;
[; ;pic16f628a.h: 544: unsigned :1;
[; ;pic16f628a.h: 545: unsigned TOUTPS0 :1;
[; ;pic16f628a.h: 546: unsigned TOUTPS1 :1;
[; ;pic16f628a.h: 547: unsigned TOUTPS2 :1;
[; ;pic16f628a.h: 548: unsigned TOUTPS3 :1;
[; ;pic16f628a.h: 549: };
[; ;pic16f628a.h: 550: } T2CONbits_t;
[; ;pic16f628a.h: 551: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f628a.h: 601: extern volatile unsigned short CCPR1 @ 0x015;
"603
[; ;pic16f628a.h: 603: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f628a.h: 608: extern volatile unsigned char CCPR1L @ 0x015;
"610
[; ;pic16f628a.h: 610: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f628a.h: 615: extern volatile unsigned char CCPR1H @ 0x016;
"617
[; ;pic16f628a.h: 617: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f628a.h: 622: extern volatile unsigned char CCP1CON @ 0x017;
"624
[; ;pic16f628a.h: 624: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f628a.h: 627: typedef union {
[; ;pic16f628a.h: 628: struct {
[; ;pic16f628a.h: 629: unsigned CCP1M :4;
[; ;pic16f628a.h: 630: unsigned CCP1Y :1;
[; ;pic16f628a.h: 631: unsigned CCP1X :1;
[; ;pic16f628a.h: 632: };
[; ;pic16f628a.h: 633: struct {
[; ;pic16f628a.h: 634: unsigned CCP1M0 :1;
[; ;pic16f628a.h: 635: unsigned CCP1M1 :1;
[; ;pic16f628a.h: 636: unsigned CCP1M2 :1;
[; ;pic16f628a.h: 637: unsigned CCP1M3 :1;
[; ;pic16f628a.h: 638: };
[; ;pic16f628a.h: 639: } CCP1CONbits_t;
[; ;pic16f628a.h: 640: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f628a.h: 680: extern volatile unsigned char RCSTA @ 0x018;
"682
[; ;pic16f628a.h: 682: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f628a.h: 685: typedef union {
[; ;pic16f628a.h: 686: struct {
[; ;pic16f628a.h: 687: unsigned RX9D :1;
[; ;pic16f628a.h: 688: unsigned OERR :1;
[; ;pic16f628a.h: 689: unsigned FERR :1;
[; ;pic16f628a.h: 690: unsigned ADEN :1;
[; ;pic16f628a.h: 691: unsigned CREN :1;
[; ;pic16f628a.h: 692: unsigned SREN :1;
[; ;pic16f628a.h: 693: unsigned RX9 :1;
[; ;pic16f628a.h: 694: unsigned SPEN :1;
[; ;pic16f628a.h: 695: };
[; ;pic16f628a.h: 696: struct {
[; ;pic16f628a.h: 697: unsigned :3;
[; ;pic16f628a.h: 698: unsigned ADDEN :1;
[; ;pic16f628a.h: 699: };
[; ;pic16f628a.h: 700: } RCSTAbits_t;
[; ;pic16f628a.h: 701: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f628a.h: 751: extern volatile unsigned char TXREG @ 0x019;
"753
[; ;pic16f628a.h: 753: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f628a.h: 758: extern volatile unsigned char RCREG @ 0x01A;
"760
[; ;pic16f628a.h: 760: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f628a.h: 765: extern volatile unsigned char CMCON @ 0x01F;
"767
[; ;pic16f628a.h: 767: asm("CMCON equ 01Fh");
[; <" CMCON equ 01Fh ;# ">
[; ;pic16f628a.h: 770: typedef union {
[; ;pic16f628a.h: 771: struct {
[; ;pic16f628a.h: 772: unsigned CM :3;
[; ;pic16f628a.h: 773: unsigned CIS :1;
[; ;pic16f628a.h: 774: unsigned C1INV :1;
[; ;pic16f628a.h: 775: unsigned C2INV :1;
[; ;pic16f628a.h: 776: unsigned C1OUT :1;
[; ;pic16f628a.h: 777: unsigned C2OUT :1;
[; ;pic16f628a.h: 778: };
[; ;pic16f628a.h: 779: struct {
[; ;pic16f628a.h: 780: unsigned CM0 :1;
[; ;pic16f628a.h: 781: unsigned CM1 :1;
[; ;pic16f628a.h: 782: unsigned CM2 :1;
[; ;pic16f628a.h: 783: };
[; ;pic16f628a.h: 784: } CMCONbits_t;
[; ;pic16f628a.h: 785: extern volatile CMCONbits_t CMCONbits @ 0x01F;
[; ;pic16f628a.h: 835: extern volatile unsigned char OPTION_REG @ 0x081;
"837
[; ;pic16f628a.h: 837: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f628a.h: 840: typedef union {
[; ;pic16f628a.h: 841: struct {
[; ;pic16f628a.h: 842: unsigned PS :3;
[; ;pic16f628a.h: 843: unsigned PSA :1;
[; ;pic16f628a.h: 844: unsigned T0SE :1;
[; ;pic16f628a.h: 845: unsigned T0CS :1;
[; ;pic16f628a.h: 846: unsigned INTEDG :1;
[; ;pic16f628a.h: 847: unsigned nRBPU :1;
[; ;pic16f628a.h: 848: };
[; ;pic16f628a.h: 849: struct {
[; ;pic16f628a.h: 850: unsigned PS0 :1;
[; ;pic16f628a.h: 851: unsigned PS1 :1;
[; ;pic16f628a.h: 852: unsigned PS2 :1;
[; ;pic16f628a.h: 853: };
[; ;pic16f628a.h: 854: } OPTION_REGbits_t;
[; ;pic16f628a.h: 855: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f628a.h: 905: extern volatile unsigned char TRISA @ 0x085;
"907
[; ;pic16f628a.h: 907: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f628a.h: 910: typedef union {
[; ;pic16f628a.h: 911: struct {
[; ;pic16f628a.h: 912: unsigned TRISA0 :1;
[; ;pic16f628a.h: 913: unsigned TRISA1 :1;
[; ;pic16f628a.h: 914: unsigned TRISA2 :1;
[; ;pic16f628a.h: 915: unsigned TRISA3 :1;
[; ;pic16f628a.h: 916: unsigned TRISA4 :1;
[; ;pic16f628a.h: 917: unsigned TRISA5 :1;
[; ;pic16f628a.h: 918: unsigned TRISA6 :1;
[; ;pic16f628a.h: 919: unsigned TRISA7 :1;
[; ;pic16f628a.h: 920: };
[; ;pic16f628a.h: 921: } TRISAbits_t;
[; ;pic16f628a.h: 922: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f628a.h: 967: extern volatile unsigned char TRISB @ 0x086;
"969
[; ;pic16f628a.h: 969: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f628a.h: 972: typedef union {
[; ;pic16f628a.h: 973: struct {
[; ;pic16f628a.h: 974: unsigned TRISB0 :1;
[; ;pic16f628a.h: 975: unsigned TRISB1 :1;
[; ;pic16f628a.h: 976: unsigned TRISB2 :1;
[; ;pic16f628a.h: 977: unsigned TRISB3 :1;
[; ;pic16f628a.h: 978: unsigned TRISB4 :1;
[; ;pic16f628a.h: 979: unsigned TRISB5 :1;
[; ;pic16f628a.h: 980: unsigned TRISB6 :1;
[; ;pic16f628a.h: 981: unsigned TRISB7 :1;
[; ;pic16f628a.h: 982: };
[; ;pic16f628a.h: 983: } TRISBbits_t;
[; ;pic16f628a.h: 984: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f628a.h: 1029: extern volatile unsigned char PIE1 @ 0x08C;
"1031
[; ;pic16f628a.h: 1031: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f628a.h: 1034: typedef union {
[; ;pic16f628a.h: 1035: struct {
[; ;pic16f628a.h: 1036: unsigned TMR1IE :1;
[; ;pic16f628a.h: 1037: unsigned TMR2IE :1;
[; ;pic16f628a.h: 1038: unsigned CCP1IE :1;
[; ;pic16f628a.h: 1039: unsigned :1;
[; ;pic16f628a.h: 1040: unsigned TXIE :1;
[; ;pic16f628a.h: 1041: unsigned RCIE :1;
[; ;pic16f628a.h: 1042: unsigned CMIE :1;
[; ;pic16f628a.h: 1043: unsigned EEIE :1;
[; ;pic16f628a.h: 1044: };
[; ;pic16f628a.h: 1045: } PIE1bits_t;
[; ;pic16f628a.h: 1046: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f628a.h: 1086: extern volatile unsigned char PCON @ 0x08E;
"1088
[; ;pic16f628a.h: 1088: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f628a.h: 1091: typedef union {
[; ;pic16f628a.h: 1092: struct {
[; ;pic16f628a.h: 1093: unsigned nBOR :1;
[; ;pic16f628a.h: 1094: unsigned nPOR :1;
[; ;pic16f628a.h: 1095: unsigned :1;
[; ;pic16f628a.h: 1096: unsigned OSCF :1;
[; ;pic16f628a.h: 1097: };
[; ;pic16f628a.h: 1098: struct {
[; ;pic16f628a.h: 1099: unsigned nBO :1;
[; ;pic16f628a.h: 1100: };
[; ;pic16f628a.h: 1101: struct {
[; ;pic16f628a.h: 1102: unsigned nBOD :1;
[; ;pic16f628a.h: 1103: };
[; ;pic16f628a.h: 1104: } PCONbits_t;
[; ;pic16f628a.h: 1105: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f628a.h: 1135: extern volatile unsigned char PR2 @ 0x092;
"1137
[; ;pic16f628a.h: 1137: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f628a.h: 1142: extern volatile unsigned char TXSTA @ 0x098;
"1144
[; ;pic16f628a.h: 1144: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f628a.h: 1147: typedef union {
[; ;pic16f628a.h: 1148: struct {
[; ;pic16f628a.h: 1149: unsigned TX9D :1;
[; ;pic16f628a.h: 1150: unsigned TRMT :1;
[; ;pic16f628a.h: 1151: unsigned BRGH :1;
[; ;pic16f628a.h: 1152: unsigned :1;
[; ;pic16f628a.h: 1153: unsigned SYNC :1;
[; ;pic16f628a.h: 1154: unsigned TXEN :1;
[; ;pic16f628a.h: 1155: unsigned TX9 :1;
[; ;pic16f628a.h: 1156: unsigned CSRC :1;
[; ;pic16f628a.h: 1157: };
[; ;pic16f628a.h: 1158: } TXSTAbits_t;
[; ;pic16f628a.h: 1159: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f628a.h: 1199: extern volatile unsigned char SPBRG @ 0x099;
"1201
[; ;pic16f628a.h: 1201: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f628a.h: 1206: extern volatile unsigned char EEDATA @ 0x09A;
"1208
[; ;pic16f628a.h: 1208: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f628a.h: 1213: extern volatile unsigned char EEADR @ 0x09B;
"1215
[; ;pic16f628a.h: 1215: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f628a.h: 1220: extern volatile unsigned char EECON1 @ 0x09C;
"1222
[; ;pic16f628a.h: 1222: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f628a.h: 1225: typedef union {
[; ;pic16f628a.h: 1226: struct {
[; ;pic16f628a.h: 1227: unsigned RD :1;
[; ;pic16f628a.h: 1228: unsigned WR :1;
[; ;pic16f628a.h: 1229: unsigned WREN :1;
[; ;pic16f628a.h: 1230: unsigned WRERR :1;
[; ;pic16f628a.h: 1231: };
[; ;pic16f628a.h: 1232: } EECON1bits_t;
[; ;pic16f628a.h: 1233: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f628a.h: 1258: extern volatile unsigned char EECON2 @ 0x09D;
"1260
[; ;pic16f628a.h: 1260: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f628a.h: 1265: extern volatile unsigned char VRCON @ 0x09F;
"1267
[; ;pic16f628a.h: 1267: asm("VRCON equ 09Fh");
[; <" VRCON equ 09Fh ;# ">
[; ;pic16f628a.h: 1270: typedef union {
[; ;pic16f628a.h: 1271: struct {
[; ;pic16f628a.h: 1272: unsigned VR :4;
[; ;pic16f628a.h: 1273: unsigned :1;
[; ;pic16f628a.h: 1274: unsigned VRR :1;
[; ;pic16f628a.h: 1275: unsigned VROE :1;
[; ;pic16f628a.h: 1276: unsigned VREN :1;
[; ;pic16f628a.h: 1277: };
[; ;pic16f628a.h: 1278: struct {
[; ;pic16f628a.h: 1279: unsigned VR0 :1;
[; ;pic16f628a.h: 1280: unsigned VR1 :1;
[; ;pic16f628a.h: 1281: unsigned VR2 :1;
[; ;pic16f628a.h: 1282: unsigned VR3 :1;
[; ;pic16f628a.h: 1283: };
[; ;pic16f628a.h: 1284: } VRCONbits_t;
[; ;pic16f628a.h: 1285: extern volatile VRCONbits_t VRCONbits @ 0x09F;
[; ;pic16f628a.h: 1335: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1337: extern volatile __bit ADEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1339: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f628a.h: 1341: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f628a.h: 1343: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f628a.h: 1345: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f628a.h: 1347: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f628a.h: 1349: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f628a.h: 1351: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f628a.h: 1353: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f628a.h: 1355: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f628a.h: 1357: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f628a.h: 1359: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f628a.h: 1361: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f628a.h: 1363: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f628a.h: 1365: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f628a.h: 1367: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f628a.h: 1369: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f628a.h: 1371: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f628a.h: 1373: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f628a.h: 1375: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f628a.h: 1377: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f628a.h: 1379: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f628a.h: 1381: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f628a.h: 1383: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f628a.h: 1385: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f628a.h: 1387: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f628a.h: 1389: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f628a.h: 1391: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f628a.h: 1393: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f628a.h: 1395: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f628a.h: 1397: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f628a.h: 1399: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f628a.h: 1401: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f628a.h: 1403: extern volatile __bit OSCF @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f628a.h: 1405: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f628a.h: 1407: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f628a.h: 1409: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f628a.h: 1411: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f628a.h: 1413: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f628a.h: 1415: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f628a.h: 1417: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f628a.h: 1419: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f628a.h: 1421: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f628a.h: 1423: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f628a.h: 1425: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f628a.h: 1427: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f628a.h: 1429: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f628a.h: 1431: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f628a.h: 1433: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f628a.h: 1435: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f628a.h: 1437: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f628a.h: 1439: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f628a.h: 1441: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f628a.h: 1443: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f628a.h: 1445: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f628a.h: 1447: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f628a.h: 1449: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f628a.h: 1451: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f628a.h: 1453: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f628a.h: 1455: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f628a.h: 1457: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f628a.h: 1459: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f628a.h: 1461: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f628a.h: 1463: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f628a.h: 1465: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f628a.h: 1467: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f628a.h: 1469: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f628a.h: 1471: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f628a.h: 1473: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1475: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1477: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f628a.h: 1479: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f628a.h: 1481: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f628a.h: 1483: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f628a.h: 1485: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f628a.h: 1487: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f628a.h: 1489: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1491: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1493: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f628a.h: 1495: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f628a.h: 1497: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f628a.h: 1499: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f628a.h: 1501: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f628a.h: 1503: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f628a.h: 1505: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f628a.h: 1507: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f628a.h: 1509: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f628a.h: 1511: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f628a.h: 1513: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f628a.h: 1515: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f628a.h: 1517: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f628a.h: 1519: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f628a.h: 1521: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f628a.h: 1523: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f628a.h: 1525: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f628a.h: 1527: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f628a.h: 1529: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f628a.h: 1531: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f628a.h: 1533: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f628a.h: 1535: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f628a.h: 1537: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f628a.h: 1539: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f628a.h: 1541: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f628a.h: 1543: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f628a.h: 1545: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f628a.h: 1547: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f628a.h: 1549: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f628a.h: 1551: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f628a.h: 1553: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f628a.h: 1555: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f628a.h: 1557: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f628a.h: 1559: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f628a.h: 1561: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f628a.h: 1563: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f628a.h: 1565: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f628a.h: 1567: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f628a.h: 1569: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f628a.h: 1571: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f628a.h: 1573: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f628a.h: 1575: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f628a.h: 1577: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f628a.h: 1579: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f628a.h: 1581: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1583: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1585: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1587: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f628a.h: 1589: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f628a.h: 1591: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f628a.h: 1593: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f628a.h: 1595: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 142: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
[; ;stdbool.h: 12: typedef unsigned char bool;
"17 configuration.h
[p x CP=ON ]
"18
[p x CPD=ON ]
"19
[p x LVP=OFF ]
"20
[p x BOREN=ON ]
"21
[p x MCLRE=OFF ]
"22
[p x PWRTE=ON ]
"23
[p x WDTE=OFF ]
"24
[p x FOSC=HS ]
[v F609 `(v ~T0 @X0 1 tf ]
"44 tmr2.h
[v _initTMR2 `TF609 ~T0 @X0 1 s ]
{
[; ;tmr2.h: 44: static inline void initTMR2(void) {
[e :U _initTMR2 ]
[f ]
[; ;tmr2.h: 45: PR2 = 124;
"45
[e = _PR2 -> -> 124 `i `uc ]
[; ;tmr2.h: 46: T2CON = 0b00000001;
"46
[e = _T2CON -> -> 1 `i `uc ]
[; ;tmr2.h: 47: TMR2IF = 0;
"47
[e = _TMR2IF -> -> 0 `i `b ]
[; ;tmr2.h: 48: TMR2IE = 1;
"48
[e = _TMR2IE -> -> 1 `i `b ]
[; ;tmr2.h: 49: TMR2ON = 1;
"49
[e = _TMR2ON -> -> 1 `i `b ]
[; ;tmr2.h: 50: }
"50
[e :UE 51 ]
}
[v F611 `(v ~T0 @X0 1 tf ]
"52 usart.h
[v _initUSART `TF611 ~T0 @X0 1 s ]
{
[; ;usart.h: 52: static inline void initUSART() {
[e :U _initUSART ]
[f ]
[; ;usart.h: 53: TRISB1 = 1;
"53
[e = _TRISB1 -> -> 1 `i `b ]
[; ;usart.h: 54: SPBRG = 39;
"54
[e = _SPBRG -> -> 39 `i `uc ]
[; ;usart.h: 55: BRGH = 1;
"55
[e = _BRGH -> -> 1 `i `b ]
[; ;usart.h: 56: CREN = 1;
"56
[e = _CREN -> -> 1 `i `b ]
[; ;usart.h: 57: SPEN = 1;
"57
[e = _SPEN -> -> 1 `i `b ]
[; ;usart.h: 58: }
"58
[e :UE 52 ]
}
[v F613 `(v ~T0 @X0 1 tf ]
"65
[v _clearOverrunError `TF613 ~T0 @X0 1 s ]
{
[; ;usart.h: 65: static inline void clearOverrunError() {
[e :U _clearOverrunError ]
[f ]
"66
[v F614 `uc ~T0 @X0 1 s temp ]
[i F614
-> -> 0 `i `uc
]
[; ;usart.h: 66: static unsigned char temp = 0;
[; ;usart.h: 67: do {
"67
[e :U 56 ]
{
[; ;usart.h: 68: temp = RCREG;
"68
[e = F614 _RCREG ]
[; ;usart.h: 69: temp = RCREG;
"69
[e = F614 _RCREG ]
[; ;usart.h: 70: CREN = 0;
"70
[e = _CREN -> -> 0 `i `b ]
[; ;usart.h: 71: CREN = 1;
"71
[e = _CREN -> -> 1 `i `b ]
"72
}
[; ;usart.h: 72: } while(OERR);
[e $ _OERR 56  ]
[e :U 55 ]
[; ;usart.h: 73: }
"73
[e :UE 53 ]
}
[v F616 `(v ~T0 @X0 1 tf ]
"83
[v _clearFramingError `TF616 ~T0 @X0 1 s ]
{
[; ;usart.h: 83: static inline void clearFramingError() {
[e :U _clearFramingError ]
[f ]
"84
[v F617 `uc ~T0 @X0 1 s temp ]
[i F617
-> -> 0 `i `uc
]
[; ;usart.h: 84: static unsigned char temp = 0;
[; ;usart.h: 85: do {
"85
[e :U 60 ]
{
[; ;usart.h: 86: temp = RCREG;
"86
[e = F617 _RCREG ]
[; ;usart.h: 87: temp = RCREG;
"87
[e = F617 _RCREG ]
[; ;usart.h: 88: SPEN = 0;
"88
[e = _SPEN -> -> 0 `i `b ]
[; ;usart.h: 89: SPEN = 1;
"89
[e = _SPEN -> -> 1 `i `b ]
"90
}
[; ;usart.h: 90: } while (FERR);
[e $ _FERR 60  ]
[e :U 59 ]
[; ;usart.h: 91: }
"91
[e :UE 57 ]
}
[; ;ServoController.h: 56: extern volatile unsigned char partMidiNote;
[; ;ServoController.h: 63: extern volatile unsigned char receiveCounter;
[; ;ServoController.h: 72: extern volatile unsigned char sawtoothCounter;
[; ;ServoController.h: 80: extern volatile unsigned char eyebrowSawtoothThreshold;
[; ;ServoController.h: 81: extern volatile unsigned char leftLipCornerSawtoothThreshold;
[; ;ServoController.h: 82: extern volatile unsigned char rightLipCornerSawtoothThreshold;
[; ;ServoController.h: 83: extern volatile unsigned char lowerJawSawtoothThreshold;
[; ;ServoController.h: 84: extern volatile unsigned char eyelidsSawtoothThreshold;
[v F628 `(v ~T0 @X0 1 tf ]
"92 ServoController.h
[v _initServos `TF628 ~T0 @X0 1 s ]
{
[; ;ServoController.h: 92: static inline void initServos(void) {
[e :U _initServos ]
[f ]
[; ;ServoController.h: 93: TRISA0 = 0;
"93
[e = _TRISA0 -> -> 0 `i `b ]
[; ;ServoController.h: 94: TRISA1 = 0;
"94
[e = _TRISA1 -> -> 0 `i `b ]
[; ;ServoController.h: 95: TRISA2 = 0;
"95
[e = _TRISA2 -> -> 0 `i `b ]
[; ;ServoController.h: 96: TRISA3 = 0;
"96
[e = _TRISA3 -> -> 0 `i `b ]
[; ;ServoController.h: 97: TRISB0 = 0;
"97
[e = _TRISB0 -> -> 0 `i `b ]
[; ;ServoController.h: 98: TRISB3 = 0;
"98
[e = _TRISB3 -> -> 0 `i `b ]
[; ;ServoController.h: 99: }
"99
[e :UE 61 ]
}
"39 ServoController.c
[v _partMidiNote `Vuc ~T0 @X0 1 e ]
[i _partMidiNote
-> -> 0 `i `uc
]
[; ;ServoController.c: 39: volatile unsigned char partMidiNote = 0;
"40
[v _receiveCounter `Vuc ~T0 @X0 1 e ]
[i _receiveCounter
-> -> 0 `i `uc
]
[; ;ServoController.c: 40: volatile unsigned char receiveCounter = 0;
"41
[v _sawtoothCounter `Vuc ~T0 @X0 1 e ]
[i _sawtoothCounter
-> -> 0 `i `uc
]
[; ;ServoController.c: 41: volatile unsigned char sawtoothCounter = 0;
"49
[v _eyebrowSawtoothThreshold `Vuc ~T0 @X0 1 e ]
[i _eyebrowSawtoothThreshold
-> + -> 180 `i -> 6 `i `uc
]
[; ;ServoController.c: 49: volatile unsigned char eyebrowSawtoothThreshold = 180 + 6;
"50
[v _leftLipCornerSawtoothThreshold `Vuc ~T0 @X0 1 e ]
[i _leftLipCornerSawtoothThreshold
-> + -> 180 `i -> 6 `i `uc
]
[; ;ServoController.c: 50: volatile unsigned char leftLipCornerSawtoothThreshold = 180 + 6;
"51
[v _rightLipCornerSawtoothThreshold `Vuc ~T0 @X0 1 e ]
[i _rightLipCornerSawtoothThreshold
-> + -> 180 `i -> 7 `i `uc
]
[; ;ServoController.c: 51: volatile unsigned char rightLipCornerSawtoothThreshold = 180 + 7;
"52
[v _lowerJawSawtoothThreshold `Vuc ~T0 @X0 1 e ]
[i _lowerJawSawtoothThreshold
-> + -> 180 `i -> 3 `i `uc
]
[; ;ServoController.c: 52: volatile unsigned char lowerJawSawtoothThreshold = 180 + 3;
"53
[v _eyelidsSawtoothThreshold `Vuc ~T0 @X0 1 e ]
[i _eyelidsSawtoothThreshold
-> + -> 180 `i -> 5 `i `uc
]
[; ;ServoController.c: 53: volatile unsigned char eyelidsSawtoothThreshold = 180 + 5;
[v $root$_isr `(v ~T0 @X0 0 e ]
[v F631 `(v ~T0 @X0 1 tf ]
"56
[v _isr `IF631 ~T0 @X0 1 e ]
{
[; ;ServoController.c: 56: void interrupt isr(void) {
[e :U _isr ]
[f ]
[; ;ServoController.c: 57: if (TMR2IF) {
"57
[e $ ! _TMR2IF 63  ]
{
[; ;ServoController.c: 58: ++sawtoothCounter;
"58
[e =+ _sawtoothCounter -> -> 1 `i `uc ]
[; ;ServoController.c: 59: if (sawtoothCounter >= 180) {
"59
[e $ ! >= -> _sawtoothCounter `i -> 180 `i 64  ]
{
[; ;ServoController.c: 60: if (sawtoothCounter >= 200) {
"60
[e $ ! >= -> _sawtoothCounter `i -> 200 `i 65  ]
{
[; ;ServoController.c: 61: RA0 = 0;
"61
[e = _RA0 -> -> 0 `i `b ]
[; ;ServoController.c: 62: RA1 = 0;
"62
[e = _RA1 -> -> 0 `i `b ]
[; ;ServoController.c: 63: RA2 = 0;
"63
[e = _RA2 -> -> 0 `i `b ]
[; ;ServoController.c: 64: RA3 = 0;
"64
[e = _RA3 -> -> 0 `i `b ]
[; ;ServoController.c: 65: RA4 = 0;
"65
[e = _RA4 -> -> 0 `i `b ]
[; ;ServoController.c: 67: sawtoothCounter = 0;
"67
[e = _sawtoothCounter -> -> 0 `i `uc ]
"68
}
[; ;ServoController.c: 68: } else {
[e $U 66  ]
[e :U 65 ]
{
[; ;ServoController.c: 69: if (sawtoothCounter == eyebrowSawtoothThreshold) RA0 = 1;
"69
[e $ ! == -> _sawtoothCounter `i -> _eyebrowSawtoothThreshold `i 67  ]
[e = _RA0 -> -> 1 `i `b ]
[e :U 67 ]
[; ;ServoController.c: 70: if (sawtoothCounter == leftLipCornerSawtoothThreshold) RA1 = 1;
"70
[e $ ! == -> _sawtoothCounter `i -> _leftLipCornerSawtoothThreshold `i 68  ]
[e = _RA1 -> -> 1 `i `b ]
[e :U 68 ]
[; ;ServoController.c: 71: if (sawtoothCounter == rightLipCornerSawtoothThreshold) RA2 = 1;
"71
[e $ ! == -> _sawtoothCounter `i -> _rightLipCornerSawtoothThreshold `i 69  ]
[e = _RA2 -> -> 1 `i `b ]
[e :U 69 ]
[; ;ServoController.c: 72: if (sawtoothCounter == lowerJawSawtoothThreshold) RA3 = 1;
"72
[e $ ! == -> _sawtoothCounter `i -> _lowerJawSawtoothThreshold `i 70  ]
[e = _RA3 -> -> 1 `i `b ]
[e :U 70 ]
[; ;ServoController.c: 73: if (sawtoothCounter == eyelidsSawtoothThreshold) RA4 = 1;
"73
[e $ ! == -> _sawtoothCounter `i -> _eyelidsSawtoothThreshold `i 71  ]
[e = _RA4 -> -> 1 `i `b ]
[e :U 71 ]
"75
}
[e :U 66 ]
"76
}
[e :U 64 ]
[; ;ServoController.c: 75: }
[; ;ServoController.c: 76: }
[; ;ServoController.c: 77: TMR2IF = 0;
"77
[e = _TMR2IF -> -> 0 `i `b ]
"78
}
[e :U 63 ]
[; ;ServoController.c: 78: }
[; ;ServoController.c: 79: if (RCIF) {
"79
[e $ ! _RCIF 72  ]
{
[; ;ServoController.c: 80: ++receiveCounter;
"80
[e =+ _receiveCounter -> -> 1 `i `uc ]
[; ;ServoController.c: 81: switch(receiveCounter) {
"81
[e $U 74  ]
{
[; ;ServoController.c: 82: case 1:
"82
[e :U 75 ]
[; ;ServoController.c: 83: RCREG = 0;
"83
[e = _RCREG -> -> 0 `i `uc ]
[; ;ServoController.c: 84: break;
"84
[e $U 73  ]
[; ;ServoController.c: 85: case 2:
"85
[e :U 76 ]
[; ;ServoController.c: 86: partMidiNote = RCREG;
"86
[e = _partMidiNote _RCREG ]
[; ;ServoController.c: 87: break;
"87
[e $U 73  ]
[; ;ServoController.c: 88: case 3:
"88
[e :U 77 ]
[; ;ServoController.c: 89: receiveCounter = 0;
"89
[e = _receiveCounter -> -> 0 `i `uc ]
[; ;ServoController.c: 90: switch(partMidiNote) {
"90
[e $U 79  ]
{
[; ;ServoController.c: 91: case 0x3C: eyebrowSawtoothThreshold = (180 + (RCREG)); break;
"91
[e :U 80 ]
[e = _eyebrowSawtoothThreshold -> + -> 180 `i -> _RCREG `i `uc ]
[e $U 78  ]
[; ;ServoController.c: 92: case 0x3E: leftLipCornerSawtoothThreshold = (180 + (RCREG)); break;
"92
[e :U 81 ]
[e = _leftLipCornerSawtoothThreshold -> + -> 180 `i -> _RCREG `i `uc ]
[e $U 78  ]
[; ;ServoController.c: 93: case 0x40: rightLipCornerSawtoothThreshold = (180 + (RCREG)); break;
"93
[e :U 82 ]
[e = _rightLipCornerSawtoothThreshold -> + -> 180 `i -> _RCREG `i `uc ]
[e $U 78  ]
[; ;ServoController.c: 94: case 0x43: lowerJawSawtoothThreshold = (180 + (RCREG)); break;
"94
[e :U 83 ]
[e = _lowerJawSawtoothThreshold -> + -> 180 `i -> _RCREG `i `uc ]
[e $U 78  ]
[; ;ServoController.c: 95: case 0x45: eyelidsSawtoothThreshold = (180 + (RCREG)); break;
"95
[e :U 84 ]
[e = _eyelidsSawtoothThreshold -> + -> 180 `i -> _RCREG `i `uc ]
[e $U 78  ]
[; ;ServoController.c: 97: case 0x4A: RB5 = (RCREG > 0) ? 1 : 0; break;
"97
[e :U 85 ]
[e = _RB5 -> ? > -> _RCREG `i -> 0 `i : -> 1 `i -> 0 `i `b ]
[e $U 78  ]
"98
}
[; ;ServoController.c: 98: }
[e $U 78  ]
"90
[e :U 79 ]
[e [\ _partMidiNote , $ -> -> 60 `i `uc 80
 , $ -> -> 62 `i `uc 81
 , $ -> -> 64 `i `uc 82
 , $ -> -> 67 `i `uc 83
 , $ -> -> 69 `i `uc 84
 , $ -> -> 74 `i `uc 85
 78 ]
"98
[e :U 78 ]
[; ;ServoController.c: 99: break;
"99
[e $U 73  ]
[; ;ServoController.c: 100: default:
"100
[e :U 86 ]
[; ;ServoController.c: 101: receiveCounter = 0;
"101
[e = _receiveCounter -> -> 0 `i `uc ]
[; ;ServoController.c: 102: RCREG = 0;
"102
[e = _RCREG -> -> 0 `i `uc ]
[; ;ServoController.c: 103: break;
"103
[e $U 73  ]
"104
}
[; ;ServoController.c: 104: }
[e $U 73  ]
"81
[e :U 74 ]
[e [\ _receiveCounter , $ -> -> 1 `i `uc 75
 , $ -> -> 2 `i `uc 76
 , $ -> -> 3 `i `uc 77
 86 ]
"104
[e :U 73 ]
"105
}
[e :U 72 ]
[; ;ServoController.c: 105: }
[; ;ServoController.c: 106: }
"106
[e :UE 62 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"108
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;ServoController.c: 108: void main(void) {
[e :U _main ]
[f ]
[; ;ServoController.c: 112: initServos();
"112
[e ( _initServos ..  ]
[; ;ServoController.c: 113: initUSART();
"113
[e ( _initUSART ..  ]
[; ;ServoController.c: 114: initTMR2();
"114
[e ( _initTMR2 ..  ]
[; ;ServoController.c: 116: PEIE = 1;
"116
[e = _PEIE -> -> 1 `i `b ]
[; ;ServoController.c: 117: GIE = 1;
"117
[e = _GIE -> -> 1 `i `b ]
[; ;ServoController.c: 123: while(1) {
"123
[e :U 89 ]
{
[; ;ServoController.c: 124: if (OERR)
"124
[e $ ! _OERR 91  ]
[; ;ServoController.c: 125: clearOverrunError();
"125
[e ( _clearOverrunError ..  ]
[e :U 91 ]
[; ;ServoController.c: 126: if(FERR)
"126
[e $ ! _FERR 92  ]
[; ;ServoController.c: 127: clearFramingError();
"127
[e ( _clearFramingError ..  ]
[e :U 92 ]
"128
}
[e :U 88 ]
"123
[e $U 89  ]
[e :U 90 ]
[; ;ServoController.c: 128: }
[; ;ServoController.c: 130: }
"130
[e :UE 87 ]
}
